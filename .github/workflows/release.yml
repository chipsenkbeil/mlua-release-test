name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-**
env:
  LUA_VERSION: 5.1.5
  LUA_FEATURE: lua51

jobs:
  macos:
    name: "Build release on MacOS"
    runs-on: macos-11.0
    if: startsWith(github.ref, 'refs/tags/')
    env:
      UPLOAD_NAME: macos
      X86_ARCH: x86_64-apple-darwin
      ARM_ARCH: aarch64-apple-darwin
      X86_DEBUG_DIR: target/x86_64-apple-darwin/debug
      ARM_DEBUG_DIR: target/aarch64-apple-darwin/debug
      X86_REL_DIR: target/x86_64-apple-darwin/release
      ARM_REL_DIR: target/aarch64-apple-darwin/release
      BUILD_LIB: libmlua_release_test.dylib
      UNIVERSAL_REL_LIB: mlua_release_test-macos.dylib
      X86_REL_LIB: mlua_release_test-macos-intel.dylib
      ARM_REL_LIB: mlua_release_test-macos-arm.dylib
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust (x86)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ env.X86_ARCH }}
      - name: Install Rust (ARM)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ env.ARM_ARCH }}
      - uses: Swatinem/rust-cache@v1
      - name: Build Lua ${{ env.LUA_VERSION }} debug library (x86_64)
        run: |
          cargo build --no-default-features --features "${{ env.LUA_FEATURE }},vendored" --target ${{ env.X86_ARCH }}
          ls -l ./${{ env.X86_DEBUG_DIR }}
          cp ./${{ env.X86_DEBUG_DIR }}/build/mlua-*/out/glue.rs ./x86_debug_glue.rs
      - name: Build Lua ${{ env.LUA_VERSION }} release library (x86_64)
        run: |
          cargo build --release --no-default-features --features "${{ env.LUA_FEATURE }},vendored" --target ${{ env.X86_ARCH }}
          ls -l ./${{ env.X86_REL_DIR }}
          cp ./${{ env.X86_REL_DIR }}/${{ env.BUILD_LIB }} ./${{ env.X86_REL_LIB }}
          cp ./${{ env.X86_REL_DIR }}/build/mlua-*/out/glue.rs ./x86_rel_glue.rs
      - name: Build Lua ${{ env.LUA_VERSION }} debug library (aarch64)
        run: |
          cargo build --no-default-features --features "${{ env.LUA_FEATURE }},vendored" --target ${{ env.ARM_ARCH }}
          ls -l ./${{ env.ARM_DEBUG_DIR }}
          cp ./${{ env.ARM_DEBUG_DIR }}/build/mlua-*/out/glue.rs ./arm_debug_glue.rs
      - name: Build Lua ${{ env.LUA_VERSION }} release library (aarch64)
        run: |
          cargo build --release --no-default-features --features "${{ env.LUA_FEATURE }},vendored" --target ${{ env.ARM_ARCH }}
          ls -l ./${{ env.ARM_REL_DIR }}
          cp ./${{ env.ARM_REL_DIR }}/${{ env.BUILD_LIB }} ./${{ env.ARM_REL_LIB }}
          cp ./${{ env.ARM_REL_DIR }}/build/mlua-*/out/glue.rs ./arm_rel_glue.rs
      - name: Unify libraries
        run: |
          lipo -create -output ${{ env.UNIVERSAL_REL_LIB }} \
              ./${{ env.X86_REL_DIR }}/${{ env.BUILD_LIB }} \
              ./${{ env.ARM_REL_DIR }}/${{ env.BUILD_LIB }}
          chmod +x ./${{ env.UNIVERSAL_REL_LIB }}
      - name: Determine git tag
        if: github.event_name == 'push'
        run: |
          TAG_NAME=${{ github.ref }}
          echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          name: mlua release test ${{ env.TAG_NAME }}
          fail_on_unmatched_files: true
          target_commitish: ${{ github.sha }}
          draft: false
          prerelease: true
          files: |
            ./${{ env.UNIVERSAL_REL_LIB }}
            ./${{ env.X86_REL_LIB }}
            ./${{ env.ARM_REL_LIB }}
            ./x86_debug_glue.rs
            ./x86_rel_glue.rs
            ./arm_debug_glue.rs
            ./arm_rel_glue.rs
